// Code generated by protoc-gen-go. DO NOT EDIT.
// source: enums.proto

package enums // import "server/generated/enums"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusCodes int32

const (
	StatusCodes_FAILED      StatusCodes = 0
	StatusCodes_SUCCESS     StatusCodes = 1
	StatusCodes_FAILED_AUTH StatusCodes = 2
)

var StatusCodes_name = map[int32]string{
	0: "FAILED",
	1: "SUCCESS",
	2: "FAILED_AUTH",
}
var StatusCodes_value = map[string]int32{
	"FAILED":      0,
	"SUCCESS":     1,
	"FAILED_AUTH": 2,
}

func (x StatusCodes) String() string {
	return proto.EnumName(StatusCodes_name, int32(x))
}
func (StatusCodes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_enums_6d483cebca7bf4f4, []int{0}
}

type SexTypes int32

const (
	SexTypes_SEX_ALL    SexTypes = 0
	SexTypes_SEX_MALE   SexTypes = 1
	SexTypes_SEX_FEMALE SexTypes = 2
)

var SexTypes_name = map[int32]string{
	0: "SEX_ALL",
	1: "SEX_MALE",
	2: "SEX_FEMALE",
}
var SexTypes_value = map[string]int32{
	"SEX_ALL":    0,
	"SEX_MALE":   1,
	"SEX_FEMALE": 2,
}

func (x SexTypes) String() string {
	return proto.EnumName(SexTypes_name, int32(x))
}
func (SexTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_enums_6d483cebca7bf4f4, []int{1}
}

type ProductTypes int32

const (
	ProductTypes_PRODUCT_ALL   ProductTypes = 0
	ProductTypes_PRODUCT_DRINK ProductTypes = 1
	ProductTypes_PRODUCT_FOOD  ProductTypes = 2
	ProductTypes_PRODUCT_OTHER ProductTypes = 3
)

var ProductTypes_name = map[int32]string{
	0: "PRODUCT_ALL",
	1: "PRODUCT_DRINK",
	2: "PRODUCT_FOOD",
	3: "PRODUCT_OTHER",
}
var ProductTypes_value = map[string]int32{
	"PRODUCT_ALL":   0,
	"PRODUCT_DRINK": 1,
	"PRODUCT_FOOD":  2,
	"PRODUCT_OTHER": 3,
}

func (x ProductTypes) String() string {
	return proto.EnumName(ProductTypes_name, int32(x))
}
func (ProductTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_enums_6d483cebca7bf4f4, []int{2}
}

type StoreSearchCriteria int32

const (
	StoreSearchCriteria_STORES_ALL     StoreSearchCriteria = 0
	StoreSearchCriteria_STORES_ADDRESS StoreSearchCriteria = 1
	StoreSearchCriteria_STORES_COMPANY StoreSearchCriteria = 2
	StoreSearchCriteria_STORES_NEAR    StoreSearchCriteria = 3
)

var StoreSearchCriteria_name = map[int32]string{
	0: "STORES_ALL",
	1: "STORES_ADDRESS",
	2: "STORES_COMPANY",
	3: "STORES_NEAR",
}
var StoreSearchCriteria_value = map[string]int32{
	"STORES_ALL":     0,
	"STORES_ADDRESS": 1,
	"STORES_COMPANY": 2,
	"STORES_NEAR":    3,
}

func (x StoreSearchCriteria) String() string {
	return proto.EnumName(StoreSearchCriteria_name, int32(x))
}
func (StoreSearchCriteria) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_enums_6d483cebca7bf4f4, []int{3}
}

func init() {
	proto.RegisterEnum("enums.StatusCodes", StatusCodes_name, StatusCodes_value)
	proto.RegisterEnum("enums.SexTypes", SexTypes_name, SexTypes_value)
	proto.RegisterEnum("enums.ProductTypes", ProductTypes_name, ProductTypes_value)
	proto.RegisterEnum("enums.StoreSearchCriteria", StoreSearchCriteria_name, StoreSearchCriteria_value)
}

func init() { proto.RegisterFile("enums.proto", fileDescriptor_enums_6d483cebca7bf4f4) }

var fileDescriptor_enums_6d483cebca7bf4f4 = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x5d, 0x4f, 0xc2, 0x30,
	0x14, 0x86, 0x61, 0x44, 0x24, 0x67, 0x08, 0xb5, 0x26, 0xc6, 0xdf, 0xb0, 0x0b, 0xb9, 0x30, 0xc6,
	0xeb, 0xda, 0x96, 0x40, 0x1c, 0x94, 0xb4, 0x5b, 0xfc, 0xb8, 0x90, 0x4c, 0x76, 0xa2, 0x5c, 0xc8,
	0x48, 0xd7, 0x19, 0xfd, 0xf7, 0x66, 0xdd, 0x16, 0xbd, 0x7c, 0x9e, 0x9e, 0xb7, 0xed, 0x79, 0x21,
	0xc4, 0x43, 0xf5, 0x59, 0x5e, 0x1f, 0x6d, 0xe1, 0x0a, 0x7a, 0xe2, 0x21, 0xba, 0x83, 0xd0, 0xb8,
	0xcc, 0x55, 0x25, 0x2f, 0x72, 0x2c, 0x29, 0xc0, 0x70, 0xce, 0x96, 0xb1, 0x14, 0xa4, 0x47, 0x43,
	0x38, 0x35, 0x29, 0xe7, 0xd2, 0x18, 0xd2, 0xa7, 0x53, 0x08, 0x9b, 0x83, 0x2d, 0x4b, 0x93, 0x05,
	0x09, 0xa2, 0x5b, 0x18, 0x19, 0xfc, 0x4e, 0x7e, 0x8e, 0x58, 0xfa, 0x49, 0xf9, 0xb4, 0x65, 0x71,
	0x4c, 0x7a, 0x74, 0x0c, 0xa3, 0x1a, 0x56, 0x2c, 0x96, 0xa4, 0x4f, 0x27, 0x00, 0x35, 0xcd, 0xa5,
	0xe7, 0x20, 0x7a, 0x84, 0xf1, 0xc6, 0x16, 0x79, 0xb5, 0x73, 0x4d, 0x74, 0x0a, 0xe1, 0x46, 0x2b,
	0x91, 0xf2, 0xa4, 0x8d, 0x9f, 0xc3, 0x59, 0x27, 0x84, 0x5e, 0xae, 0x1f, 0x48, 0x9f, 0x12, 0x18,
	0x77, 0x6a, 0xae, 0x94, 0x20, 0xc1, 0xff, 0x21, 0x95, 0x2c, 0xa4, 0x26, 0x83, 0xe8, 0x15, 0x2e,
	0x8c, 0x2b, 0x2c, 0x1a, 0xcc, 0xec, 0xee, 0x83, 0xdb, 0xbd, 0x43, 0xbb, 0xcf, 0xfc, 0xfb, 0x89,
	0xd2, 0xd2, 0xb4, 0xd7, 0x53, 0x98, 0x74, 0x2c, 0x84, 0x6e, 0x76, 0xfb, 0x73, 0x5c, 0xad, 0x36,
	0x6c, 0xfd, 0x4c, 0x82, 0xfa, 0x5f, 0xad, 0x5b, 0x4b, 0xa6, 0xc9, 0xe0, 0xfe, 0xea, 0xe5, 0xb2,
	0x44, 0xfb, 0x85, 0x76, 0xf6, 0x8e, 0x07, 0xb4, 0x99, 0xc3, 0x7c, 0xe6, 0x2b, 0x7c, 0x1b, 0xfa,
	0x42, 0x6f, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x88, 0x45, 0x80, 0xc5, 0x5f, 0x01, 0x00, 0x00,
}
